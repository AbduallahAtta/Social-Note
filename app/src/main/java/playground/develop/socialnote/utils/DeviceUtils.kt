package playground.develop.socialnote.utilsimport android.content.Contextimport android.location.LocationManagerimport android.net.ConnectivityManagerimport android.os.Buildimport android.provider.Settingsimport android.provider.Settings.SettingNotFoundExceptionimport playground.develop.socialnote.BuildConfigclass DeviceUtils(val context: Context) {    fun dsd(arg: String): Boolean {        val ds = arrayOf(            BuildConfig.dOne,            BuildConfig.dTwo,            BuildConfig.dThree,            BuildConfig.dFour,            BuildConfig.dFive        )        return ds.contains(arg)    }    fun isLocationEnabled(): Boolean {        val locationMode: Int        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.P) {            try {                locationMode = Settings.Secure.getInt(                    context.contentResolver,                    Settings.Secure.LOCATION_MODE                )            } catch (e: SettingNotFoundException) {                e.printStackTrace()                return false            }            return locationMode != Settings.Secure.LOCATION_MODE_OFF        } else {            val locationManager =                context.getSystemService(Context.LOCATION_SERVICE) as LocationManager            return locationManager.isLocationEnabled        }    }    @Suppress("DEPRECATION")    fun isDeviceNetworkAvailable(): Boolean {        val connectivityManager =            context.getSystemService(Context.CONNECTIVITY_SERVICE) as ConnectivityManager        val networkInfo = if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            connectivityManager.activeNetwork        } else {            connectivityManager.activeNetworkInfo        }        return networkInfo != null    }    companion object {        fun getDeviceUtils(context: Context): DeviceUtils {            return DeviceUtils(context)        }    }}